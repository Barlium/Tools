<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:vrClusterConfig"
        xmlns:scm ="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="vrClusterConfig.MainWindow"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="VRCluster config" 
        MinWidth="800"
        MinHeight="600">
    <Window.Resources>
        <sys:String x:Key="emailRegex">^[a-zA-Z][\w\.-]*[a-zA-Z0-9]@
        [a-zA-Z0-9][\w\.-]*[a-zA-Z0-9]\.[a-zA-Z][a-zA-Z\.]
        *[a-zA-Z]$</sys:String>
        
        <CollectionViewSource x:Key="cvsInputTrackers" Source="{Binding inputs}" Filter="CollectionViewSource_Filter" IsLiveFilteringRequested="True">

        </CollectionViewSource>
        <ObjectDataProvider x:Key="dataFromEnum" 
                        MethodName="GetNames" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:LogCatValue" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
        <Style x:Key="CommonStyle" TargetType="{x:Type FrameworkElement}"/>
        <Style x:Key="TabContent" TargetType="{x:Type Grid}">
            <Setter Property="Height" Value="430" />
            <Setter Property="Background" Value="#1C1C1C" />
        </Style>

        <Style x:Key="ControlsStyle" TargetType="{x:Type Control}" BasedOn="{StaticResource CommonStyle}">
            <Setter Property="Background" Value="#3F3F46" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Foreground" Value="WhiteSmoke" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="BorderThickness" Value="1" />


        </Style>
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ControlsStyle}" >
            <Setter Property="Background" Value="#FF333337" />
        </Style>
        <Style x:Key="CustomTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ControlsStyle}" >
            <Setter Property="Background" Value="#FF333337" />
        </Style>
        <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource CommonStyle}">
            <Setter Property="Background" Value="#2D2D30" />
            <Setter Property="Foreground" Value="WhiteSmoke" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="Border" BorderThickness="0" 
                        Padding="10,5,15,5" Margin="0,0,0,0" >
                            <ContentPresenter x:Name="ContentSite" ContentSource="Header" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="WhiteSmoke"/>
                                <Setter TargetName="Border" Property="Background" Value="#0079CB"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="WhiteSmoke"/>
                                <Setter TargetName="Border" Property="Background" Value="#2D2D30" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource ControlsStyle}">
            <Setter Property="FlowDirection" Value="RightToLeft" />
            <Setter Property="HorizontalAlignment" Value="Left" />

        </Style>

        <Style TargetType="{x:Type Menu}" >
            <Setter Property="Background" Value="#2D2D30" />
        </Style>
        <Style TargetType="{x:Type MenuItem}" >
            <Setter Property="Background" Value="#2D2D30" />
            <Setter Property="Margin" Value="0"/>
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ControlsStyle}">
            <Setter Property="MinWidth" Value="40" />
            <Setter Property="MaxWidth" Value="200" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
        <Style x:Key="SizeTB" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ControlsStyle}">
            <Setter Property="Width" Value="70" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
        <Style x:Key="NameTB" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ControlsStyle}">
            <Setter Property="Width" Value="150" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ControlsStyle}">
            <Setter Property="Width" Value="150" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
        </Style>
        <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource ControlsStyle}">

            <Setter Property="MinWidth" Value="100" />
            <Setter Property="MaxWidth" Value="200" />
            <Setter Property="Height" Value="300" />
        </Style>
        <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource ControlsStyle}">
            <Setter Property="MinWidth" Value="100" />
            <Setter Property="MaxWidth" Value="200" />
            <Setter Property="Height" Value="300" />
        </Style>
        <Style TargetType="{x:Type local:UnselectableListBox}" BasedOn="{StaticResource ControlsStyle}">
            <Setter Property="MinWidth" Value="100" />
            <Setter Property="MaxWidth" Value="200" />
            <Setter Property="Height" Value="300" />
        </Style>

        <Style TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="WhiteSmoke" />
        </Style>


        <ControlTemplate x:Key="MenuItemControlTemplate" TargetType="{x:Type MenuItem}">
            <Grid Margin="10,0">
                <DockPanel>


                    <ContentPresenter x:Name="content" ContentSource="Header" />
                </DockPanel>
                <Popup x:Name="PART_Popup" Focusable="false" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-1">

                    <Border BorderThickness="0" BorderBrush="White" Background="#2D2D30">
                        <ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="CustomCheckBoxControlTemplate" TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Height="21" Width="21" Margin="5,0">
                    <Grid x:Name="markGrid" Margin="0,0,3,0" Width="21" Height="21">
                        <Path x:Name="optionMark" Data="M19.43043,2.3829644 L9.1518969,17.722808 8.8077779,17.722808 0,10.116135 2.4867883,6.8598807 8.2883854,11.859559 16.232593,2.9722871E-05 19.43043,2.3829644 z" Fill="#0079CB" Margin="0,0,2.3,2.3" Opacity="0" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" Height="18.7" Width="18.7"/>
                        <Rectangle x:Name="indeterminateMark" Fill="#FF212121" Margin="2" Opacity="0"/>
                    </Grid>
                </Border>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2,3,2,-3" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent" Value="True">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="4,-1,0,0"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FF333337"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF5593FF"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF0079CB"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF0079CB"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FF333337"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FFBCBCBC"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="checkBoxBorder" Value="#FF333337"/>
                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#FF3C77DD"/>
                    <Setter Property="Fill" TargetName="optionMark" Value="#FF0079CB"/>
                    <Setter Property="Fill" TargetName="indeterminateMark" Value="#FF0079CB"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="{x:Null}">
                    <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="SubTabItemStyle" TargetType="{x:Type TabItem}" BasedOn="{StaticResource CommonStyle}">
            <Setter Property="Background" Value="#2D2D30" />
            <Setter Property="Foreground" Value="WhiteSmoke" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="Border" BorderThickness="0" 
                            Padding="5,2,5,2" >
                            <ContentPresenter x:Name="ContentSite" ContentSource="Header" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="#0079CB"/>
                                <Setter TargetName="Border" Property="Background" Value="#252527"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="WhiteSmoke"/>
                                <Setter TargetName="Border" Property="Background" Value="#2D2D30" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--ScrollViewer-->
        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid Background="#FF3F3F46">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0" />
                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            <Rectangle Grid.Row="1" Grid.Column="1" Fill="Transparent"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Scrollbar Thumbs-->
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="Rectangle1"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ScrollBars-->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="#8C8C8C" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>

                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid Background="#2D2D30">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Menu x:Name="menuMain" Foreground="WhiteSmoke" FocusManager.IsFocusScope="False" Grid.Row="0" Margin="0" VerticalAlignment="Top" IsMainMenu="True">
            <Menu.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Stretch"/>

                </ItemsPanelTemplate>
            </Menu.ItemsPanel>
            <MenuItem Header="File" HorizontalAlignment="Left" Template="{DynamicResource MenuItemControlTemplate}">
                <MenuItem Header="_New..." Click="NewConfig" />
                <Separator />
                <MenuItem Header="_Open..." Click="OpenConfig" />
                <Separator />
                <MenuItem Header="_Save" Click="SaveConfig"/>
                <MenuItem x:Name="menuSaveAs" Header="_Save As..." Click="SaveConfig"/>
                <Separator />
                <MenuItem Header="_Exit" Click="Exit"/>
            </MenuItem>
            <MenuItem Header="About" HorizontalAlignment="Right" Click="MenuItem_Click" Template="{DynamicResource MenuItemControlTemplate}" />

        </Menu>
        <TabControl Grid.Row="1" x:Name="tabControl" VerticalAlignment="Top" MinWidth="500" MinHeight="200" Background="#FF2D2D30" BorderThickness="0,3,0,0" BorderBrush="#0079CB" Margin="10" Padding="0" Style="{DynamicResource TabControlStyle}" >
            <TabItem Header="Cluster nodes">
                <Grid Style="{StaticResource TabContent}" >
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" x:Name="nodesListPanel">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ListBox Grid.Row="0" x:Name="nodesListBox" SelectedItem="{Binding selectedNode, Mode=TwoWay}" ItemsSource="{Binding clusterNodes}" DisplayMemberPath="id" ScrollViewer.HorizontalScrollBarVisibility="Visible" ScrollViewer.VerticalScrollBarVisibility="Visible" Height="Auto" ToolTip="Cluster Nodes List" Margin="0,-1,4,5.2" />
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" x:Name="addNodeButton" Content="Add" Click="addNodeButton_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Add new node to cluster" />
                                <Button Grid.Column="1" x:Name="deleteNodeButton" Content="Delete" Click="deleteNodeButton_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Delete selected node" />
                            </Grid>
                        </Grid>
                        <Grid Grid.Column="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />

                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <CheckBox x:Name="isMasterCheckBox" Grid.Column="0" Content="Master Node" Checked="isMasterCheckBox_Checked" IsChecked="{Binding selectedNode.isMaster}" Template="{DynamicResource CustomCheckBoxControlTemplate}" />
                                    <Grid Grid.Column="1" Visibility="{Binding selectedNode.isMaster, Converter={StaticResource BoolToVisConverter}, FallbackValue=Collapsed}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <Label Grid.Column="0" Content="Client Port:" ToolTip="Client port, number" />
                                        <TextBox x:Name="portCsTb" Grid.Column="1" Style="{DynamicResource SizeTB}" Text="{Binding portCs, ValidatesOnDataErrors=True}" ToolTip="Client port, number"/>
                                        <Label Grid.Column="2" Content="Server Port:" ToolTip="Server port, number" />
                                        <TextBox x:Name="portSsTb" Grid.Column="3" Style="{DynamicResource SizeTB}" Text="{Binding portSs, ValidatesOnDataErrors=True}" ToolTip="Server port, number" />
                                    </Grid>
                                </Grid>
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column = "0" Width="85" >
                                        <Label Content="Node ID" />
                                    </Grid>
                                    <Grid Grid.Column="1">
                                        <TextBox x:Name="nodeIdTb" Style="{DynamicResource NameTB}" Text="{Binding selectedNode.id, ValidatesOnDataErrors=True}" ToolTip="Node ID, you can use letters, numbers and _" />
                                    </Grid>
                                </Grid>
                                <Grid Grid.Row="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column = "0" Width="85">
                                        <Label Content="Node Address" />
                                    </Grid>
                                    <Grid Grid.Column="1">
                                        <TextBox x:Name="nodeAddressTb" Style="{DynamicResource NameTB}" Text="{Binding selectedNode.address, ValidatesOnDataErrors=True}" ToolTip="Selected node IP address" />
                                    </Grid>
                                </Grid>
                                <Grid Grid.Row="3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column = "0" Width="85" >
                                        <Label Content="Screen" />
                                    </Grid>
                                    <Grid Grid.Column="1">
                                        <ComboBox x:Name="screensCb" Template="{DynamicResource ComboBoxTemplate}" ItemsSource="{Binding screens}"  SelectedItem="{Binding selectedNode.screen }"  DisplayMemberPath="id" ToolTip="Select screen, required"/>


                                    </Grid>
                                </Grid>
                                <Grid Grid.Row="4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column = "0" Width="85" >
                                        <Label Content="Viewport" />
                                    </Grid>
                                    <Grid Grid.Column="1">
                                        <ComboBox x:Name="viewportsCb" ItemsSource="{Binding viewports}" DisplayMemberPath="id" SelectedItem="{Binding selectedNode.viewport}" Template="{DynamicResource ComboBoxTemplate}" ToolTip="Select viewport, required"/>


                                    </Grid>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Screens">
                <Grid Style="{StaticResource TabContent}" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0" x:Name="screensListPanel">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ListBox Grid.Row="0" x:Name="screensListBox" ItemsSource="{Binding screens}" DisplayMemberPath="id" SelectedItem="{Binding selectedScreen, Mode=TwoWay}" Height="Auto" ToolTip="List of Screens"/>

                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" x:Name="addScreenButton" Content="Add" Click="addscreenbutton_click" Template="{DynamicResource ButtonTemplate}" ToolTip="Add new screen"/>
                            <Button Grid.Column="1" x:Name="deleteScreenButton" Content="Delete" Click="deleteScreenButton_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Delete selected screen"/>
                        </Grid>
                    </Grid>
                    <Grid Grid.Column="1" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Label Grid.Column="0" Grid.Row="0" Content="Screen ID"/>
                            <TextBox x:Name="screenIdTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource NameTB}" Text="{Binding selectedScreen.id, ValidatesOnDataErrors=True}" ToolTip="Screen ID, you can use letters, numbers and _" />
                            <Label Grid.Column="0" Grid.Row="1" Content="Parent Scene Node" />
                            <ComboBox x:Name="parentWallsCb" Grid.Column="1" Grid.Row="1" Template="{DynamicResource ComboBoxTemplate}" ItemsSource="{Binding sceneNodes}" DisplayMemberPath="id" SelectedItem="{Binding selectedScreen.parentWall}" ToolTip="Select parent scene node" />
                        </Grid>
                        <Grid Grid.Row="1" HorizontalAlignment="Left" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid  Grid.Row="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Content="Screen Location Parameters" />
                                <Grid Grid.Row="1" Margin="50,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Label Grid.Column="0" Grid.Row="0" Content="X" ToolTip="X coordinate in meters, floating point number" />
                                    <TextBox x:Name="screenLocationXTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource SizeTB}" Text="{Binding selectedScreen.locationX, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="X coordinate in meters, floating point number"/>
                                    <Label Grid.Column="0" Grid.Row="1" Content="Y" ToolTip="Y coordinate in meters, floating point number" />
                                    <TextBox x:Name="screenLocationYTb" Grid.Column="1" Grid.Row="1" Style="{DynamicResource SizeTB}" Text="{Binding selectedScreen.locationY, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="Y coordinate in meters, floating point number" />
                                    <Label Grid.Column="0" Grid.Row="2" Content="Z" ToolTip="Z coordinate in meters, floating point number" />
                                    <TextBox x:Name="screenLocationZTb" Grid.Column="1" Grid.Row="2" Style="{DynamicResource SizeTB}" Text="{Binding selectedScreen.locationZ, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="Z coordinate in meters, floating point number" />
                                </Grid>
                            </Grid>
                            <Grid Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Content="Screen Rotation Parameters" />
                                <Grid  Grid.Row="1" Margin="50,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Label Grid.Column="0" Grid.Row="0" Content="Pitch" ToolTip="Pitch in degrees, floating point number" />
                                    <TextBox x:Name="screenRotationPTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource SizeTB}" Text="{Binding selectedScreen.rotationP, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="Pitch in degrees, floating point number" />
                                    <Label Grid.Column="0" Grid.Row="1" Content="Yaw" ToolTip="Yaw in degrees, floating point number" />
                                    <TextBox x:Name="screenRotationYTb" Grid.Column="1" Grid.Row="1" Style="{DynamicResource SizeTB}" Text="{Binding selectedScreen.rotationY, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="Yaw in degrees, floating point number" />
                                    <Label Grid.Column="0" Grid.Row="2" Content="Roll" ToolTip="Roll in degrees, floating point number" />
                                    <TextBox x:Name="screenRotationRTb" Grid.Column="1" Grid.Row="2" Style="{DynamicResource SizeTB}" Text="{Binding selectedScreen.rotationR, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="Roll in degrees, floating point number" />
                                </Grid>
                            </Grid>
                            <Grid Grid.Row="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label  Grid.Row="0" Content="Screen Size Parameters" />
                                <Grid Grid.Row="1" Margin="50,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Label Grid.Column="0" Grid.Row="0" Content="X" ToolTip="X size in meters, floating point number" />
                                    <TextBox x:Name="screenSizeXTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource SizeTB}" Text="{Binding selectedScreen.sizeX, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="X size in meters, floating point number" />
                                    <Label Grid.Column="0" Grid.Row="1" Content="Y" ToolTip="Y size in meters, floating point number" />
                                    <TextBox x:Name="screenSizeYTb" Grid.Column="1" Grid.Row="1" Style="{DynamicResource SizeTB}" Text="{Binding selectedScreen.sizeY, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="Y size in meters, floating point number" />
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Viewports">
                <Grid Style="{StaticResource TabContent}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0" x:Name="viewportsListPanel">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ListBox Grid.Row="0" x:Name="viewportsListBox" ItemsSource="{Binding viewports}" DisplayMemberPath="id" SelectedItem="{Binding selectedViewport, Mode=TwoWay}" Height="Auto"/>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" x:Name="addViewportButton" Content="Add" Click="addViewportButton_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Add new viewport"/>
                            <Button Grid.Column="1" x:Name="deleteViewportButton" Content="Delete" Click="deleteViewportButton_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Delete selected viewport"/>
                        </Grid>
                    </Grid>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Label Grid.Column="0" Grid.Row="0" Content="Viewport ID" />
                            <TextBox x:Name="viewportIdTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource NameTB}" Text="{Binding selectedViewport.id, ValidatesOnDataErrors=True}" AutomationProperties.HelpText="help text" ToolTip="Viewport ID, you can use letters, numbers and _" />
                            <Label Grid.Column="0" Grid.Row="1" Content="X" ToolTip="X coordinate in meters, floating point number" />
                            <TextBox x:Name="viewportXTb" Grid.Column="1" Grid.Row="1" Style="{DynamicResource SizeTB}" Text="{Binding selectedViewport.x, ValidatesOnDataErrors=True}" ToolTip="X coordinate in meters, floating point number" />
                            <Label Grid.Column="0" Grid.Row="2" Content="Y" ToolTip="Y coordinate in meters, floating point number"/>
                            <TextBox x:Name="viewportYTb" Grid.Column="1" Grid.Row="2" Style="{DynamicResource SizeTB}" Text="{Binding selectedViewport.y, ValidatesOnDataErrors=True}" ToolTip="Y coordinate in meters, floating point number"  />
                            <Label Grid.Column="0" Grid.Row="3" Content="Width" />
                            <TextBox x:Name="viewportWidthTb" Grid.Column="1" Grid.Row="3" Style="{DynamicResource SizeTB}" Text="{Binding selectedViewport.width, ValidatesOnDataErrors=True}" ToolTip="Width of viewport in pixels" />
                            <Label Grid.Column="0" Grid.Row="4" Content="Height"/>
                            <TextBox x:Name="viewportHeightTb" Grid.Column="1" Grid.Row="4" Style="{DynamicResource SizeTB}" Text="{Binding selectedViewport.height, ValidatesOnDataErrors=True}" ToolTip="Height of viewport in pixels" />
                        </Grid>
                        <Grid Grid.Row="1">
                            <CheckBox x:Name="isVerticalFlip" Content="Vertical Flip" HorizontalAlignment="Left" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding selectedViewport.verticalFlip}" />
                        </Grid>
                        <Grid Grid.Row="2">
                            <CheckBox x:Name="isHorizontalFlip" Content="Horizontal Flip" HorizontalAlignment="Left" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding selectedViewport.horizontalFlip}" />
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>

            <TabItem Header="Inputs" >
                <Grid Style="{StaticResource TabContent}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ListBox x:Name="inputsListBox" Grid.Row="0" ItemsSource="{Binding inputs}" DisplayMemberPath="id" SelectedItem="{Binding selectedInput, Mode=TwoWay}" Height="Auto" ToolTip="List of input devices" />
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="addInputBtn" Grid.Column="0" Content="Add" Click="addInputBtn_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Add new input device"/>
                            <Button x:Name="delInputBtn" Grid.Column="1" Content="Delete" Click="delInputBtn_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Delete selected input device"/>
                        </Grid>
                    </Grid>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Label Content="Input ID" Grid.Column="0" Grid.Row="0"  />
                            <TextBox Grid.Column="1" Grid.Row="0" x:Name="inputIdTb" Style="{DynamicResource NameTB}" Text="{Binding selectedInput.id, ValidatesOnDataErrors=True}" ToolTip="Input device ID, you can use letters, numbers and _" />
                            <Label Content="Input Type" Grid.Column="0" Grid.Row="1" />
                            <Label x:Name="inputTypeLbl" Grid.Column="1" Grid.Row="1" Content="{Binding selectedInput.type}"/>
                            <Label Content="Input Address" Grid.Column="0" Grid.Row="2" />
                            <TextBox Grid.Column="1" Grid.Row="2" x:Name="inputAddressTb" Style="{DynamicResource NameTB}" Text="{Binding selectedInput.address, ValidatesOnDataErrors=True}" ToolTip="Input Addres in format InputName@127.0.0.1" />
                        </Grid>
                        <Grid Grid.Row="1" x:Name="trackerInputSettings" >
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding selectedInput.type}" Value="tracker" >
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Column="0" Grid.Row="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Content="Tracker Location Parameters" />
                                <Grid Grid.Row="1" Margin="50,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Label Grid.Column="0" Grid.Row="0" Content="X" ToolTip="X coordinate in meters, floating point number" />
                                    <TextBox x:Name="inputLocationXTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource SizeTB}" Text="{Binding selectedInput.locationX, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="X coordinate in meters, floating point number" />
                                    <Label Grid.Column="0" Grid.Row="1" Content="Y" ToolTip="Y coordinate in meters, floating point number" />
                                    <TextBox x:Name="inputLocationYTb" Grid.Column="1" Grid.Row="1" Style="{DynamicResource SizeTB}" Text="{Binding selectedInput.locationY, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="Y coordinate in meters, floating point number"/>
                                    <Label Grid.Column="0" Grid.Row="2" Content="Z" ToolTip="Z coordinate in meters, floating point number" />
                                    <TextBox x:Name="inputLocationZTb" Grid.Column="1" Grid.Row="2"  Style="{DynamicResource SizeTB}" Text="{Binding selectedInput.locationZ, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="Z coordinate in meters, floating point tnumber"/>
                                </Grid>
                            </Grid>
                            <Grid Grid.Column="0" Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Content="Tracker Rotation Parameters"/>
                                <Grid Grid.Row="1" Margin="50,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Label Grid.Column="0" Grid.Row="0" Content="Pitch" ToolTip="Pitch in degrees, floating point number" />
                                    <TextBox x:Name="inputRotationPTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource SizeTB}" Text="{Binding selectedInput.rotationP, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="Pitch in degrees, floating point number" />
                                    <Label Grid.Column="0" Grid.Row="1" Content="Yaw" ToolTip="Yaw in degrees, floating point number" />
                                    <TextBox x:Name="inputRotationYTb" Grid.Column="1" Grid.Row="1"  Style="{DynamicResource SizeTB}" Text="{Binding selectedInput.rotationY, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="Yaw in degrees, floating point number" />
                                    <Label Grid.Column="0" Grid.Row="2" Content="Roll" ToolTip="Roll in degrees, floating point number" />
                                    <TextBox x:Name="inputRotationRTb" Grid.Column="1" Grid.Row="2" Style="{DynamicResource SizeTB}" Text="{Binding selectedInput.rotationR, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="Roll in degrees, floating point number" />
                                </Grid>
                            </Grid>
                            <Grid Grid.Column="0" Grid.Row="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Content="Tracker Axis Parameters" />
                                <Grid Grid.Row="1" Margin="50,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Label Grid.Column="0" Grid.Row="0" Content="Front" ToolTip="Front direction axis" />
                                    <TextBox x:Name="inputFront" Grid.Column="1" Grid.Row="0" Style="{DynamicResource SizeTB}" Text="{Binding selectedInput.front, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="Front direction axis" />
                                    <Label Grid.Column="0" Grid.Row="1" Content="Right" ToolTip="Right direction axis" />
                                    <TextBox x:Name="inputRight" Grid.Column="1" Grid.Row="1" Style="{DynamicResource SizeTB}" Text="{Binding selectedInput.right, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="Right direction axis" />
                                    <Label Grid.Column="0" Grid.Row="2" Content="Up" ToolTip="Up direction axis" />
                                    <TextBox x:Name="inputUp" Grid.Column="1" Grid.Row="2"  Style="{DynamicResource SizeTB}" Text="{Binding selectedInput.up, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="Up direction axis" />
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Scene nodes">
                <Grid Style="{StaticResource TabContent}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TreeView x:Name="sceneNodesTreeView" Grid.Row="0" SelectedItemChanged="sceneNodesTreeView_SelectedItemChanged" MouseDown="treeView_MouseDown" MouseMove="treeView_MouseMove" Focusable="True" MouseUp="sceneNodesTreeView_MouseUp" AllowDrop="True" ItemsSource="{Binding sceneNodesView}" Height="Auto" ToolTip="List of empty hierarchy nodes (transforms)" Margin="-6,-6,10,10.2">
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="IsSelected" Value="{Binding isSelected, Mode=TwoWay}" />
                                    <Setter Property="IsExpanded" Value="true" />
                                    <Setter Property="Foreground" Value="WhiteSmoke" />
                                    <EventSetter Event="UIElement.DragOver"  Handler="treeView_DragOver"/>
                                    <EventSetter Event="UIElement.Drop" Handler="treeView_Drop"/>
                                    <EventSetter Event="UIElement.MouseMove" Handler="treeView_MouseMove"/>
                                    <EventSetter Event="UIElement.MouseDown" Handler="treeView_MouseDown"/>
                                </Style>
                            </TreeView.ItemContainerStyle>
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding children}">
                                    <TextBlock Text="{Binding node.id}" />
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="addSceneNode" Grid.Column="0" Content="Add" Click="addSceneNode_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Add new empty hierarchy node (transform)" />
                            <Button x:Name="deleteSceneNode" Grid.Column="1" Content="Delete" Click="deleteSceneNode_Click" Template="{DynamicResource ButtonTemplate}" ToolTip="Delete selected empty hierarchy node (transform)" />
                        </Grid>
                    </Grid>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Grid.Row="0"  Content="Scene Node ID"/>
                            <TextBox x:Name="sceneNodeIdTb" Grid.Column="1" Grid.Row="0" Text="{Binding selectedSceneNodeView.node.id, Mode=TwoWay, ValidatesOnDataErrors=True}" Style="{DynamicResource NameTB}" ToolTip="ID of empty hierarchy node (transform), you can use letters, numbers and _" />
                            <Label Grid.Column="0" Grid.Row="1" Content="Tracker ID"  />
                            <ComboBox Grid.Row="1" Grid.Column="1" x:Name="sceneNodeTrackerCb" Template="{DynamicResource ComboBoxTemplate}" DisplayMemberPath="id" ItemsSource="{Binding Source={StaticResource cvsInputTrackers}}" SelectedItem="{Binding selectedSceneNodeView.node.tracker}" ToolTip="Select Tracker ID, not required" >

                            </ComboBox>
                            <Label Grid.Column="0" Grid.Row="2" Content="Tracker Channel" />
                            <TextBox x:Name="sceneNodeTrackerChTb" Grid.Column="1" Grid.Row="2" Style="{DynamicResource NameTB}" Text="{Binding selectedSceneNodeView.node.trackerCh, Mode=TwoWay, ValidatesOnDataErrors=True}" ToolTip="Tracker channel, number, not required"/>
                        </Grid>
                        <Grid Grid.Row="1" HorizontalAlignment="Left" >
                            <Grid.RowDefinitions >
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Content="Location" />
                                <Grid Grid.Row="1" Margin="50,0,0,0" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Grid.Row="0" Content="X" ToolTip="X coordinate in meters, floating point number" />
                                    <TextBox x:Name="sceneNodeLocationXTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource SizeTB}" Text="{Binding selectedSceneNodeView.node.locationX, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="X coordinate in meters, floating point number" />
                                    <Label Grid.Column="0" Grid.Row="1" Content="Y" ToolTip="Y coordinate in meters, floating point number" />
                                    <TextBox x:Name="sceneNodeLocationYTb" Grid.Column="1" Grid.Row="1" Style="{DynamicResource SizeTB}" Text="{Binding selectedSceneNodeView.node.locationY, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="Y coordinate in meters, floating point number" />
                                    <Label Grid.Column="0" Grid.Row="2" Content="Z" ToolTip="Z coordinate in meters, floating point number" />
                                    <TextBox x:Name="sceneNodeLocationZTb" Grid.Column="1" Grid.Row="2" Style="{DynamicResource SizeTB}" Text="{Binding selectedSceneNodeView.node.locationZ, ValidatesOnDataErrors=True}" HorizontalAlignment="Right" ToolTip="Z coordinate in meters, floating point number" />
                                </Grid>
                            </Grid>
                            <Grid Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Content="Rotation" />
                                <Grid Grid.Row="1" Margin="50,0,0,0" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Grid.Row="0" Content="Pitch" ToolTip="Pitch in degrees, floating point number" />
                                    <TextBox x:Name="sceneNodeRotationPTb" Grid.Column="1" Grid.Row="0" Style="{DynamicResource SizeTB}" Text="{Binding selectedSceneNodeView.node.rotationP, ValidatesOnDataErrors=True}" ToolTip="Pitch in degrees, floating point number" />
                                    <Label Grid.Column="0" Grid.Row="1" Content="Yaw" ToolTip="Yaw in degrees, floating point number" />
                                    <TextBox x:Name="sceneNodeRotationYTb" Grid.Column="1" Grid.Row="1" Style="{DynamicResource SizeTB}" Text="{Binding selectedSceneNodeView.node.rotationY, ValidatesOnDataErrors=True}" ToolTip="Yaw in degrees, floating point number" />
                                    <Label Grid.Column="0" Grid.Row="2" Content="Roll" ToolTip="Roll in degrees, floating point number" />
                                    <TextBox x:Name="sceneNodeRotationRTb" Grid.Column="1" Grid.Row="2" Style="{DynamicResource SizeTB}" Text="{Binding selectedSceneNodeView.node.rotationR, ValidatesOnDataErrors=True}" ToolTip="Roll in degrees, floating point number" />
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Other settings" >
                <Grid Style="{StaticResource TabContent}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Label Content="Swap sync policy" Grid.Column="0"/>
                        <ComboBox x:Name="swapSyncCb" Grid.Column="1" Template="{DynamicResource ComboBoxTemplate}" ItemsSource="{Binding swapSyncPolicy}" DisplayMemberPath="Value" SelectedValuePath="Key" SelectedItem="{Binding selectedSwapSync}" />
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Label Content="Stereo settings" Grid.Row="0" />
                        <Grid Grid.Row="1" Margin="50,0,0,0" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <CheckBox x:Name="eyeSwapCheckBox" Grid.Column="0" Grid.Row="0" Content="Eye Switch" HorizontalAlignment="Left" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding eyeSwap}" ToolTip="If unchecked (L|R) &lt;--&gt; if checked (R|L) eye switch" />
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Label Content="interoccular distance (meters)" Grid.Column="0" ToolTip="Interoccular distance (meters)" />
                                <TextBox x:Name="eyeDistTb" Grid.Column="1" Style="{DynamicResource SizeTB}" Text="{Binding eyeDist, ValidatesOnDataErrors=True}" ToolTip="Interoccular distance (meters)" />
                            </Grid>
                        </Grid>
                        <Label Content="Debug settings" Grid.Row="2" />
                        <Grid  Grid.Row="3" Margin="50,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <CheckBox x:Name="lagSimulationCheckBox" Grid.Column="0" Grid.Row="0" Content="Lag Simulation" HorizontalAlignment="Left" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding lagSimulation}" ToolTip="Enable/disable lag simulation" />
                            <Grid Grid.Column="1" Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Label Content="Lag max time" Grid.Column="0" ToolTip="Maximum delay time for randome delay simulation" />
                                <TextBox x:Name="lagMaxTimeTb" Grid.Column="1" Style="{DynamicResource SizeTB}" Text="{Binding lagMaxTime, ValidatesOnDataErrors=True}" ToolTip="aximum delay time for randome delay simulation"/>
                            </Grid>
                            <CheckBox x:Name="drawStatsCheckBox" Grid.Column="0" Grid.Row="2" Content="Draw Stats" HorizontalAlignment="Left" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding drawStats}"/>
                        </Grid>
                        <Label Content="Camera settings" Grid.Row="4" />
                        <Grid  Grid.Row="5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Label Content="Camera Location" Grid.Column="0" Grid.Row="0" Margin="50,0,0,0" />
                            <Grid Grid.Column="0" Grid.Row="1" Margin="100,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="0*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Label Content="X" Grid.Column="0" Grid.Row="0" ToolTip="X coordinate in meters, floating point number" />
                                <TextBox Grid.Column="1" Grid.Row="0" x:Name="cameraXtb" Style="{DynamicResource SizeTB}" Text="{Binding cameraLocationX, ValidatesOnDataErrors=True}" ToolTip="X coordinate in meters, floating point number" />
                                <Label Content="Y" Grid.Column="0" Grid.Row="1" ToolTip="Y coordinate in meters, floating point number"  />
                                <TextBox Grid.Column="1" Grid.Row="1" x:Name="cameraYtb" Style="{DynamicResource SizeTB}"  Text="{Binding cameraLocationY, ValidatesOnDataErrors=True}" ToolTip="Y coordinate in meters, floating point number" />
                                <Label Content="Z" Grid.Column="0" Grid.Row="2" ToolTip="Z coordinate in meters, floating point number"  />
                                <TextBox Grid.Column="1" Grid.Row="2" x:Name="cameraZtb" Style="{DynamicResource SizeTB}"  Text="{Binding cameraLocationZ, ValidatesOnDataErrors=True}" ToolTip="Z coordinate in meters, floating point number" />
                            </Grid>

                        </Grid>
                        <Grid Grid.Row="6" Margin="50,0,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Label Content="Tracker ID" Grid.Column="0" Grid.Row="0" />
                            <ComboBox x:Name="cameraTrackerIDCb" Grid.Column="1" Grid.Row="0" Template="{DynamicResource ComboBoxTemplate}" ItemsSource="{Binding Source={StaticResource cvsInputTrackers}}" DisplayMemberPath="id" SelectedItem="{Binding cameraTracker}" />

                            <Label Content="Tracker channel" Grid.Column="0" Grid.Row="1" />
                            <TextBox x:Name="cameraTrackingChTb" Grid.Row="1" Grid.Column="1" Style="{DynamicResource NameTB}" Text="{Binding cameraTrackerCh, ValidatesOnDataErrors=True}" />
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Launcher" x:Name="launcherTab" >
                <Grid Style="{StaticResource TabContent}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Background="#FF1C1C1C">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="3" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Column="0" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" Visibility="{Binding IsChecked, ElementName=showPanelToggle, Converter={StaticResource BoolToVisConverter}}" >
                                <Grid Background="#252527">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Label Grid.Column="0" Grid.Row="0" Content="OpenGL options" />
                                    <ComboBox x:Name="openGlCb" Grid.Column="1" Grid.Row="0" ItemsSource="{Binding openGlParams}" SelectedItem="{Binding selectedOpenGlParam}" DisplayMemberPath="Key" Template="{DynamicResource ComboBoxTemplate}" Width="160"/>
                                    <CheckBox x:Name="runParamsCheckBox" Grid.Row="3" Grid.Column="0" Content="Run With Params" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="True" />
                                    <Grid Grid.Column="1" Grid.Row="3">
                                        <Grid.Style>
                                            <Style TargetType="{x:Type Grid}">
                                                <Setter Property="Visibility" Value="{Binding IsChecked, ElementName=runParamsCheckBox, Converter={StaticResource BoolToVisConverter}}" />
                                            </Style>
                                        </Grid.Style>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <CheckBox x:Name="stereoCheckBox" Grid.Row="0" Content="Stereo Enabled" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding isStereo}" />
                                        <CheckBox x:Name="soundCheckBox" Grid.Row="1" Content="No Sound" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding isNoSound}" />
                                        <CheckBox x:Name="coresCheckBox" Grid.Row="2" Content="Use All Available Cores" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding isUseAllCores}" />
                                        <CheckBox x:Name="fixedSeedCheckBox" Grid.Row="3" Content="Fixed Seed" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding isFixedSeed}" />
                                        <CheckBox x:Name="textureStreamingCheckBox" Grid.Row="4" Content="No Texture Streaming" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding isNotextureStreaming}" />
                                        <Label Grid.Row="5" Content="Additional cmd params:" />
                                        <TextBox x:Name="commandLineTb" Grid.Row="6" Style="{DynamicResource NameTB}" Width="160" Text="{Binding additionalParams, UpdateSourceTrigger=PropertyChanged}" />
                                    </Grid>
                                </Grid>
                            </Grid>
                            <Grid Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" >

                                <ToggleButton x:Name="showPanelToggle" Content="Options" Padding="1" Background="#2D2D30" Foreground="WhiteSmoke" Margin="-15,15,-15,0" RenderTransformOrigin="0.5,0.5" BorderBrush="{x:Null}"  >
                                    <ToggleButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ToggleButton.RenderTransform>
                                </ToggleButton>

                            </Grid>
                        </Grid>
                        <Grid Grid.Column="1" >
                            <TabControl Grid.Row="0" TabStripPlacement="Bottom" Background="{x:Null}" BorderThickness="0" Padding="0" Style="{DynamicResource SubTabControlStyle}" Margin="3,0,0,0" Height="285" Panel.ZIndex="-4" >
                                <TabItem Header="Applications" Style="{DynamicResource SubTabItemStyle}" >
                                    <Grid Background="#252527" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="10" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <!--<RowDefinition Height="*" />-->
                                            <RowDefinition Height="3" />
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Column="0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Label Content="Applications" Grid.Column="0" Grid.Row="0" />
                                            <ListBox x:Name="applicationsListBox" Height="Auto" MinWidth="150" Grid.Column="0" Grid.Row="1"  ItemsSource="{Binding applications}" SelectedItem="{Binding selectedApplication}" MaxWidth="780" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" MinHeight="150" UseLayoutRounding="True" ToolTip="List of applications"/>
                                            <Grid Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Button Grid.Column="0" x:Name="addAppButton" Content="Add" Template="{DynamicResource ButtonTemplate}" Click="addAppButton_Click" ToolTip="Add new application to list" />
                                                <Button Grid.Column="1" x:Name="deleteAppButton" Content="Delete" Template="{DynamicResource ButtonTemplate}" Click="deleteAppButton_Click" ToolTip="Delete selected  application" />
                                            </Grid>
                                            <Grid Grid.Row="3">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <Label Content="Config Files" Grid.Column="0" Grid.Row="0"/>
                                                <ComboBox x:Name="configsCb" Height="Auto" Grid.Column="1" Grid.Row="0" ItemsSource="{Binding configs}" SelectedItem="{Binding selectedConfig}" VerticalAlignment="Top" Template="{DynamicResource ComboBoxTemplate}" DropDownOpened="configsCb_DropDownOpened" Width="Auto" MinWidth="150" MaxWidth="720" ToolTip="Select config file" />
                                                <Label Content="Cameras" Grid.Row="1" Grid.Column="0" />
                                                <ComboBox x:Name="camerasCb" Height="Auto" Grid.Row="1" Grid.Column="1" ItemsSource="{Binding cameras}" SelectedItem="{Binding selectedCamera}" VerticalAlignment="Top" Template="{DynamicResource ComboBoxTemplate}" DropDownOpened="camerasCb_DropDownOpened" ToolTip="Select camera" />
                                            </Grid>

                                        </Grid>

                                        <Grid Grid.Column="2" Grid.Row="0" >
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>

                                        </Grid>

                                    </Grid>
                                </TabItem>

                                <TabItem Header="Active Nodes" Style="{DynamicResource SubTabItemStyle}">
                                    <Grid Background="#252527">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid >
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <ListBox x:Name="activeNodesListBox" Height="Auto" MinWidth="100" Grid.Row="0" SelectionMode="Multiple" ItemsSource="{Binding activeNodes}" MaxWidth="350" HorizontalAlignment="Left" ToolTip="Active nodes IP addresses list" />
                                            <Grid Grid.Row="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Button Grid.Column="0" x:Name="addActiveNodeButton" Content="Add" Template="{DynamicResource ButtonTemplate}" Height="19" Margin="2,2,2,0" VerticalAlignment="Top" Click="addActiveNodeButton_Click" ToolTip="Add new  active node address" />
                                                <Button Grid.Column="1" x:Name="deleteActiveNodeButton" Content="Delete" Template="{DynamicResource ButtonTemplate}" Click="deleteActiveNodeButton_Click" ToolTip="Delete selected active nodes" />
                                            </Grid>
                                        </Grid>

                                    </Grid>
                                </TabItem>

                                <TabItem Header="Log Tools" Style="{DynamicResource SubTabItemStyle}">
                                    <Grid Background="#252527">

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="160" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="0">

                                            <Grid Grid.Column="0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <Button x:Name="logsFolderBtn" Grid.Row="1" Template="{DynamicResource ButtonTemplate}" Width="100" Padding="2" HorizontalContentAlignment="Center" Click="logsFolderBtn_Click" >
                                                    <TextBlock TextWrapping="Wrap" TextAlignment="Center" ToolTip="Collect logs from all nodes to local folder" Width="100">Collect logs</TextBlock>
                                                </Button>
                                                <Button x:Name="logsClearBtn" Grid.Row="2" Content="Clear all logs" Template="{DynamicResource ButtonTemplate}" Padding="2" Width="100" Click="logsClearBtn_Click" />
                                                <CheckBox x:Name="logsZipCheckBox" Grid.Row="3" Content="Zip Logs" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding isLogZip}" />
                                                <CheckBox x:Name="logsRemoveCheckBox" Grid.Row="4" Content="Remove files arter Zip" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding isLogRemoved}" Visibility="{Binding IsChecked, ElementName=logsZipCheckBox, Converter={StaticResource BoolToVisConverter}}" />

                                            </Grid>
                                        </Grid>
                                        <Grid Grid.Column="1" Margin="5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <CheckBox x:Name="logOptionsCheckBox" Grid.Row="0" Content="Enable Logging Options" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="false" />
                                            <Grid Grid.Row="1">
                                                <Grid.Style>
                                                    <Style TargetType="{x:Type Grid}">
                                                        <Setter Property="Visibility" Value="{Binding IsChecked, ElementName=logOptionsCheckBox, Converter={StaticResource BoolToVisConverter}}" />
                                                    </Style>
                                                </Grid.Style>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid Grid.Column="1">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="*" />
                                                    </Grid.RowDefinitions>
                                                    <Grid Grid.Row="0">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition Height="Auto" />
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <Label Grid.Column="0" Grid.Row="0" Content="Log File Name" />
                                                        <TextBox Grid.Column="1" Grid.Row="0" x:Name="logFileNameTb" Text="{Binding logFile}" Style="{DynamicResource NameTB}" />
                                                        <CheckBox x:Name="forceLogCheckBox" Grid.Row="1" Grid.Column="0" Content="Force Log Flush" Template="{DynamicResource CustomCheckBoxControlTemplate}" IsChecked="{Binding isForceLogFlush}" />
                                                    </Grid>
                                                    <Label Grid.Row="1" Content="Log Level Setup"  />
                                                    <ListBox x:Name="logLevelsListBox" Grid.Row="2" Height="190" MinWidth="150" Grid.Column="0" ItemsSource="{Binding logCategories}" MaxWidth="350" ScrollViewer.VerticalScrollBarVisibility="Auto"  >
                                                        <ListBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="Auto" />
                                                                        <ColumnDefinition Width="Auto" />
                                                                        <ColumnDefinition Width="*" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <CheckBox Grid.Column="0" IsChecked="{Binding isChecked}" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" />
                                                                    <Label Grid.Column="1" Content="{Binding id}"/>
                                                                    <ComboBox Grid.Column="2"  ItemsSource="{Binding Source={StaticResource dataFromEnum}}" Template="{DynamicResource ComboBoxTemplate}" SelectedItem="{Binding value, Mode=TwoWay}" HorizontalAlignment="Right" MaxWidth="95" SelectedIndex="1" SelectionChanged="ComboBox_SelectionChanged" />
                                                                </Grid>
                                                            </DataTemplate>
                                                        </ListBox.ItemTemplate>
                                                        <ListBox.ItemContainerStyle>
                                                            <Style TargetType="ListBoxItem">
                                                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                                            </Style>
                                                        </ListBox.ItemContainerStyle>
                                                    </ListBox>
                                                </Grid>
                                            </Grid>
                                        </Grid>
                                    </Grid>
                                </TabItem>
                            </TabControl>
                        </Grid>


                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Label Grid.Row="0" Content="Command" />
                        <Grid Grid.Row="1" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Auto">
                                <TextBlock x:Name="commandTextBlock" Text="{Binding commandLine}"  TextWrapping="WrapWithOverflow" Background="#3F3F46" MinWidth="300" Margin="5"  ScrollViewer.CanContentScroll="True" Height="32" ScrollViewer.VerticalScrollBarVisibility="Auto" ToolTip="Generated command line" />
                            </ScrollViewer>
                            <Button x:Name="copyLogBtn" Grid.Column="1" Content="Copy" Template="{DynamicResource ButtonTemplate}" HorizontalAlignment="Left" Width="50" Click="copyLogBtn_Click" Margin="5,0,2,0" ToolTip="Copy command line to bufer" />
                        </Grid>

                        <Grid Grid.Row="3" VerticalAlignment="Stretch" />
                        <Grid Grid.Row="4" VerticalAlignment="Bottom" Margin="0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="runBtn" Content="Run" Grid.Column="0" Template="{DynamicResource ButtonTemplate}" Click="runBtn_Click" FontSize="16" Padding="1,3" ToolTip="Run Application" />
                            <Button x:Name="statusBtn" Content="Status" Grid.Column="1" Template="{DynamicResource ButtonTemplate}" Click="statusBtn_Click" FontSize="16" Padding="1,3" ToolTip="Get status of the Application" />
                            <Button x:Name="killBtn" Content="Kill" Grid.Column="2" Template="{DynamicResource ButtonTemplate}" Click="killBtn_Click" FontSize="16" Padding="1,3" ToolTip="Kill current application" />
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>

        </TabControl>
        <!--<DockPanel Grid.Row="2">
            <TextBlock MinHeight="100" Width="740" ><Run Text="Log window here"/></TextBlock>
        </DockPanel>-->
    </Grid>
</Window>
